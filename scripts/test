#!/usr/bin/env node

var http = require('http')

var elementIsVisible = require('selenium-webdriver').until.elementIsVisible
var Driver           = require('selenium-webdriver/firefox').Driver

var install    = require('bower').commands.install
var outputFile = require('fs-extra').outputFile
var Server     = require('node-static').Server
var tasks      = require('grunt').tasks


const package_name = require('../package.json').name

const PORT = 8080
const REPORTS_DIR='reports'


function writeReport(type, data)
{
  var path = REPORTS_DIR+'/'+package_name+'.'+type

  outputFile(path, data, function(error)
  {
    if(error) return console.trace(error);

    console.log(type + ' report saved at ' + path);
  });
}

function waitReport(driver, id)
{
  var elem = driver.findElement({id: id})

  driver
      .wait(elementIsVisible(elem), 20000)
      .then(elem.getAttribute.bind(elem, 'value'))
      .then(writeReport.bind(undefined, id))
}


install([], undefined, {cwd: 'test'}).on('end', function(installed)
{
  installed = Object.keys(installed)

  if(installed.length)
    console.log('Installed:',installed.join(', '));

  tasks('coverage', {}, function()
  {
    var file = new Server();

    var server = http.createServer(function(request, response)
    {
      var listener = file.serve.bind(file, request, response)

      request.addListener('end', listener).resume()
    }).listen(PORT);


    var driver = new Driver()

    driver.get('http://localhost:'+PORT+'/test/index.html')

    waitReport(driver, 'junit')
    waitReport(driver, 'lcov')

    driver.quit().then(server.close.bind(server))
  })
});
